#!/usr/bin/env ruby

# frozen_string_literal: true

require 'backup'
require 'backup/main_loop'
require 'optparse'

include Backup

# Prepare the logger
logger = Logger.new(STDOUT)
Logging.logger = logger

# Log the version
logger.info "Backup #{Backup::VERSION}"

# Parse the options from the command line
options = {
  force: false
}

option_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: backup [options]'

  opts.on('-cPATH', '--config=PATH', 'Path to the configuration file') do |c|
    options[:config] = c
  end

  opts.on('-f', '--force', 'Force a backup immediately') do
    options[:force] = true
  end
end

option_parser.parse!

# Ensure the config file is specified
if options[:config].nil?
  $stderr.puts 'You must specify a config file'
  exit 1
end

# Ensure the config file exists
unless File.file? options[:config]
  $stderr.puts 'The specified config file does not exist'
  exit 1
end

# Attemp to parse the config file
begin
  config = ConfigParser.load_file options[:config]
rescue => e
  $stderr.puts 'Failed parsing the config file'
  $stderr.puts e.message
  exit 1
end

# Run the command
command = MainLoop.new config, force: true
exit command.run
